import numpy as np
import matplotlib.pyplot as plt
from matplotlib import gridspec
import seaborn as sns
import pandas as pd


# Test 1
rmsd = [0.0012505836509091287, 0.0024095533356010136, 0.017385010620619736, 0.01257405824059044, 0.028453115371330863, 0.035835480014796056, 0.030618692905577977, 0.031755880413507284, 0.048177519281442746, 0.03632804633503395, 0.04090987013812029, 0.039471145802900856, 0.045677560894964844, 0.03410586363932699, 0.04089466120440578, 0.035840279968471875]
xs = np.arange(2, 18)
sns.set(style="darkgrid")
plt.plot(xs, rmsd, label='RMSD')
rmsd = [0] * 16
plt.plot(xs, rmsd, label='Reported RMSD')
plt.legend()
plt.ylabel('Root-mean-square-deviation')
plt.xlabel('Number of molecules')
plt.show()

# Test 1 bis
rmsd = [0.005200588744259063, 0.008627729385373987, 0.019325604327202737, 0.04533256051270444,
    0.023809663818259635, 0.029584728269324057, 0.03348678646696335, 0.04499616048565156, 0.0346250662350847, 0.043626945964781026, 0.0398922560485548, 0.03625728468366385, 0.05268852483457713, 0.04999633331946593, 0.03527708540825035, 0.04045764573105576]
xs = np.arange(2, 18)
sns.set(style="darkgrid")
plt.plot(xs, rmsd, label='RMSD')
rmsd = [0.001, 0.0018, 0.0020, 0.0025, 0.003, 0.0033, 0.006, 0.0078, 0.0082, 0.01, 0.012, 0.016, 0.018, 0.024, 0.03, 0.036]
plt.plot(xs, rmsd, label='Reported RMSD')
plt.legend()
plt.ylabel('Root-mean-square-deviation')
plt.xlabel('Number of molecules')
plt.show()

# Test 3
rmsd = [0.013379590476169281, 0.004821449784297262, 0.06245961688563259, 0.11179491642624005, 0.15831391714012383, 0.2118201687422612, 0.27753762200555804, 0.28789018605999755, 0.26049415690261174, 0.2871428298916586, 0.28394130522312616, 0.27229116857386787, 0.2973958371929952, 0.3096221375472247, 0.28391498902594503, 0.29916335273860417, 0.08606142517121129, 0.31752952641713494, 0.28408314975957744, 0.1107945921220887, 0.2784232990566882, 0.2834396389072813, 0.14961539167853855, 0.29681986171218816, 0.07923184273541793, 0.27964230161655174, 0.3073861574505308, 0.28752394851665836, 0.305821114468201, 0.1971774972201443]
std = [0.0018019119751821406, 0.03536506406937345, 0.004796475576594152, 0.0012596235828675189, 0.0026333229503999155, 0.006274469929632015, 0.022250642241213935, 0.003389974031094897, 0.015175280249599745, 0.001379684099429662, 0.0065264008689633534, 0.002146502305376491, 0.006558868696785028, 0.005079882271894627, 0.007000492862622972, 0.003912078773044114, 0.010533519324107787, 0.006056399424694023, 0.0031825385191852403, 0.0011305627121502811, 0.008306719449203288, 0.010003933657468081, 0.012834190544537534, 0.0016596905181948624, 0.012264766411795849, 0.006014484744877763, 0.0032771974968096498, 0.0056760462234117124, 0.006848343798563406, 0.006841448789199112]
xs = np.arange(1, 31)
sns.set(style="darkgrid")
plt.plot(xs, rmsd, label='RMSD')
rmsd = [0.005, 0.006, 0.04, 0.11, 0.16, 0.19, 0.2, 0.22, 0.23, 0.26, 0.29, 0.3, 0.31, 0.33, 0.345, 0.36, 0.38, 0.4, 0.405, 0.41, 0.418, 0.426, 0.432, 0.44, 0.45, 0.475, 0.51, 0.515, 0.51, 0.52]
plt.plot(xs, rmsd, label='Reported RMSD')
plt.legend()
plt.ylabel('Root-mean-square-deviation')
plt.xlabel('Charge')
plt.show()


import sys; sys.exit(0)

mixture = np.asarray([
    [43.99, 0.001433],
    [44.0 , 0.003016],
    [44.01, 0.005686],
    [44.02, 0.009603],
    [44.03, 0.014527],
    [44.04, 0.019684],
    [44.05, 0.023893],
    [44.06, 0.025978],
    [44.07, 0.025301],
    [44.08, 0.022072],
    [44.09, 0.017249],
    [44.1 , 0.012074],
    [44.11, 0.007571],
    [44.12, 0.004252],
    [44.13, 0.002139],
    [45.0 , 7.9e-05],
    [45.01, 0.000154],
    [45.02, 0.00027],
    [45.03, 0.000423],
    [45.04, 0.000595],
    [45.05, 0.00075],
    [45.06, 0.000846],
    [45.07, 0.000855],
    [45.08, 0.000774],
    [45.09, 0.000627],
    [45.1 , 0.000456],
    [45.11, 0.000296],
    [45.12, 0.000173],
    [45.13, 9e-05],
    [45.14, 4.2e-05],
    [45.97, 0.0023],
    [45.98, 0.004802],
    [45.99, 0.00898],
    [46.0 , 0.015043],
    [46.01, 0.022574],
    [46.02, 0.030342],
    [46.03, 0.036532],
    [46.04, 0.0394],
    [46.05, 0.038063],
    [46.06, 0.032939],
    [46.07, 0.025533],
    [46.08, 0.017729],
    [46.09, 0.011026],
    [46.1 , 0.006143],
    [46.11, 0.003066],
    [46.98, 8.2e-05],
    [46.99, 0.000159],
    [47.0 , 0.000277],
    [47.01, 0.000431],
    [47.02, 0.000602],
    [47.03, 0.000752],
    [47.04, 0.000841],
    [47.05, 0.000843],
    [47.06, 0.000757],
    [47.07, 0.000609],
    [47.08, 0.000439],
    [47.09, 0.000283],
    [47.1 , 0.000164],
    [47.11, 8.5e-05],
    [47.12, 3.9e-05],
    [59.95, 0.004034],
    [59.96, 0.008355],
    [59.97, 0.015499],
    [59.98, 0.025755],
    [59.99, 0.038335],
    [60.0 , 0.051112],
    [60.01, 0.061043],
    [60.02, 0.065304],
    [60.03, 0.06258],
    [60.04, 0.053718],
    [60.05, 0.041304],
    [60.06, 0.028448],
    [60.07, 0.017551],
    [60.08, 0.009699],
    [60.09, 0.004801],
    [60.95, 6.8e-05],
    [60.96, 0.000146],
    [60.97, 0.000281],
    [60.98, 0.000484],
    [60.99, 0.000748],
    [61.0 , 0.001035],
    [61.01, 0.001282],
    [61.02, 0.001423],
    [61.03, 0.001415],
    [61.04, 0.00126],
    [61.05, 0.001006],
    [61.06, 0.000719],
    [61.07, 0.00046],
    [61.08, 0.000264],
    [61.09, 0.00013]])
acetic_acid = np.asarray([
    [60.0211293695, 0.978654163823],
    [61.0244842047, 0.0213458361771]])
ethanol = np.asarray([
    [46.0418648138, 0.978654163823],
    [47.045219649, 0.0213458361771]])
propane = np.asarray([
    [44.0626002582, 0.968319370498],
    [45.0659550934, 0.031680629502]])

mixture[:, 1] /= mixture[:, 1].max()
acetic_acid[:, 1] /= acetic_acid[:, 1].max()
ethanol[:, 1] /= ethanol[:, 1].max()
propane[:, 1] /= propane[:, 1].max()

width = 0.1
fig = plt.figure()
gs = gridspec.GridSpec(2, 1, height_ratios=[1, 1])

ax1 = plt.subplot(gs[0])
ax1.bar(mixture[:, 0], mixture[:, 1],
    label='Mixture', fc=(1, 0, 0, 0.5), width=width)
ax1.legend()
ax1.set_ylabel('Relative peak intensity')

ax2 = plt.subplot(gs[1])
ax2.bar(acetic_acid[:, 0], acetic_acid[:, 1],
    label='Acetic acid', fc=(0, 1, 0, 0.5), width=width)
ax2.bar(ethanol[:, 0], ethanol[:, 1],
    label='Ethanol', width=width)
ax2.bar(propane[:, 0], propane[:, 1],
    label='Propane', width=width)
ax2.legend()
ax2.set_xlabel('M/z ratio')
ax2.set_ylabel('Relative peak intensity')
plt.savefig('imgs/deconv.png', format='png', dpi=500)
